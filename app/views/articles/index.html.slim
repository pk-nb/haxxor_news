- @articles.each.with_index(offset + 1) do |article, index|
  .article
    .num= link_to index, article
    .article-detail
      - vote_class = ''
      - if user_vote = article.user_vote(current_user)
        - vote_class = user_vote.direction == 1 ? 'upvoted' : 'downvoted'
      .votes class="#{vote_class}"
        = link_to article_upvote_path(article_id: article.id), remote: true, method: :post, class: 'up vote'
          span class='oi' data-glyph='caret-top' title='caret-top' aria-hidden='true'
        span.score= article.score
        = link_to article_downvote_path(article_id: article.id), remote: true, method: :post, class: 'down vote'
          span class='oi' data-glyph='caret-bottom' title='caret-bottom' aria-hidden='true'
      .article-wrapper
        h2.title= link_to article.url do
          => article.title
          span= "(#{URI(article.url).host})"
        .user
          span class='oi' data-glyph='person' title='person' aria-hidden="true"
          = article.user ? article.user.username : 'anonymous'
        .post-time
          span class='oi' data-glyph='clock' title='clock' aria-hidden="true"
          = time_ago_in_words(article.created_at) + ' ago'
        .comments= link_to article do
          span class='oi' data-glyph='chat' title='chat' aria-hidden="true"
          | comments (#{article.comment_count})

.page-numbers
  - if total_pages > 1
    - 1.upto(total_pages) do |n|
      - page_class = n == page ? 'current-page' : nil
      = link_to n, articles_path(page_number: (n)), class: page_class
